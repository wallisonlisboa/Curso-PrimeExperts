<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.5 on win32)" generated="20210618 21:55:00.124" rpa="false" schemaversion="2">
<suite id="s1" name="Apiautomation" source="c:\Users\Barbara\Desktop\Curso-PrimeExperts\tests\apiautomation.robot">
<kw name="Conectar a minha API" library="kws_apiautomation" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>fakeAPI</arg>
<arg>${BASE_URL}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210618 21:55:00.407" level="INFO">Creating Session using : alias=fakeAPI, url=https://fakerestapi.azurewebsites.net/api/v1, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210618 21:55:00.401" endtime="20210618 21:55:00.407"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210618 21:55:00.407" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:00.407"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${HEADERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210618 21:55:00.407" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:00.407"/>
</kw>
<status status="PASS" starttime="20210618 21:55:00.401" endtime="20210618 21:55:00.407"/>
</kw>
<test id="s1-t1" name="Cenario: Cadastrar um novo livro (POST)">
<kw name="Cadastrar um novo livro" library="kws_apiautomation">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${JSON_BODY}</arg>
<arg>${JSON_POST}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210618 21:55:00.407" level="INFO">${JSON_BODY} = {'id': '201', 'title': 'Meu novo Book', 'description': 'Estamos testando a adição de novos livros', 'pageCount': '556', 'excerpt': 'Esse livro é muito top', 'publishDate': '2021-06-18T23:12:00.5639338...</msg>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:00.407"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${RESPOSTA}</var>
<arg>fakeAPI</arg>
<arg>Books</arg>
<arg>json=${JSON_BODY}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210618 21:55:02.093" level="INFO">POST Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '223'} 
 body=b'{"id": "201", "title": "Meu novo Book", "description": "Estamos testando a adi\\u00e7\\u00e3o de novos livros", "pageCount": "556", "excerpt": "Esse livro \\u00e9 muito top", "publishDate": "2021-06-18T23:12:00.5639338+00:00"}' 
 </msg>
<msg timestamp="20210618 21:55:02.093" level="INFO">POST Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=200, reason=OK 
 headers={'Transfer-Encoding': 'chunked', 'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Server': 'Kestrel', 'api-supported-versions': '1.0', 'Date': 'Sat, 19 Jun 2021 00:55:01 GMT'} 
 body={"id":201,"title":"Meu novo Book","description":"Estamos testando a adição de novos livros","pageCount":556,"excerpt":"Esse livro é muito top","publishDate":"2021-06-18T23:12:00.5639338+00:00"} 
 </msg>
<msg timestamp="20210618 21:55:02.093" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:02.093"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${RESPOSTA.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210618 21:55:02.093" endtime="20210618 21:55:02.093"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210618 21:55:02.093" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210618 21:55:02.093" endtime="20210618 21:55:02.093"/>
</kw>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:02.109"/>
</kw>
<kw name="Conferir o status code" library="kws_apiautomation">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${STATUSCODE_DESEJADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210618 21:55:02.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210618 21:55:02.109" endtime="20210618 21:55:02.109"/>
</kw>
<status status="PASS" starttime="20210618 21:55:02.109" endtime="20210618 21:55:02.109"/>
</kw>
<kw name="Conferir o reason" library="kws_apiautomation">
<arg>OK</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.reason}</arg>
<arg>${REASON_DESEJADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210618 21:55:02.109" endtime="20210618 21:55:02.118"/>
</kw>
<status status="PASS" starttime="20210618 21:55:02.109" endtime="20210618 21:55:02.118"/>
</kw>
<kw name="Conferir se retorna todos os dados cadastrados do livro &quot;201&quot;" library="kws_apiautomation" sourcename="Conferir se retorna todos os dados cadastrados do livro &quot;${ID_LIVRO}&quot;">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>id</arg>
<arg>${JSON_POST.id}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.118" endtime="20210618 21:55:02.118"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>title</arg>
<arg>${JSON_POST.title}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.118" endtime="20210618 21:55:02.118"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>description</arg>
<arg>${JSON_POST.description}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.118" endtime="20210618 21:55:02.133"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>pageCount</arg>
<arg>${JSON_POST.pageCount}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.133" endtime="20210618 21:55:02.133"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>excerpt</arg>
<arg>${JSON_POST.excerpt}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.133" endtime="20210618 21:55:02.133"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA.json()}</arg>
<arg>publishDate</arg>
<arg>${JSON_POST.publishDate}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20210618 21:55:02.133" endtime="20210618 21:55:02.149"/>
</kw>
<status status="PASS" starttime="20210618 21:55:02.118" endtime="20210618 21:55:02.149"/>
</kw>
<tag>TESTE_3</tag>
<status status="PASS" starttime="20210618 21:55:00.407" endtime="20210618 21:55:02.149"/>
</test>
<doc>Aqui estarão presentes os testes referentes as API's de de Books.</doc>
<status status="PASS" starttime="20210618 21:55:00.124" endtime="20210618 21:55:02.149"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">TESTE_3</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Apiautomation">Apiautomation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
